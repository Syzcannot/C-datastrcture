#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
const int MaxN=10000000+10;
int T,n,m,cnt;
long long ans;
int prime[MaxN],mu[MaxN],g[MaxN],sum[MaxN];  
bool vis[MaxN];
inline int Read()
{
    int x=0,f=1; char ch=getchar(); 
    while (ch<'0'||ch>'9') {if (ch=='-') f=-1; ch=getchar();}
    while (ch>='0'&&ch<='9') {x=x*10+ch-'0'; ch=getchar();}
    return x*f;
}
inline void writeln(long long x)
{
	char st[60]; int len=0;
	if (x<0) {putchar('-'); x=-x;} if (!x) {putchar('0'); putchar('\n'); return;} 
	while (x) {st[++len]=x%10+'0'; x/=10;}
	while (len) putchar(st[len--]); putchar('\n');
}
void prepare()
{
	mu[1]=1;
	for (int i=2;i<MaxN;++i)
	{
		if (!vis[i]) prime[++cnt]=i,mu[i]=-1,g[i]=1;
		for (int j=1;j<=cnt&&i*prime[j]<MaxN;++j)
		{
			vis[i*prime[j]]=1;
			if (i%prime[j]) mu[i*prime[j]]=-mu[i],g[i*prime[j]]=mu[i]-g[i];  
			   else {mu[i*prime[j]]=0; g[i*prime[j]]=mu[i]; break;}
		}
	} 
	for (int i=1;i<MaxN;++i) sum[i]=sum[i-1]+g[i];  
}
int main()
{
	prepare();
	T=Read();
	while (T--)
	{
		n=Read(); m=Read();
		if (n>m) swap(n,m);
		ans=0;  
        for (int i=1,last;i<=n;i=last+1)  
        {  
            last=min(n/(n/i),m/(m/i));  
            ans+=(long long)(n/i)*(m/i)*(sum[last]-sum[i-1]);  
        } 
		writeln(ans);
    }  
	return 0;
}
